# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - api-synapsespace

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Set up Python version
      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # Create and activate virtual environment
      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      # Install dependencies
      - name: Install dependencies
        run: |
          cd backend
          pip install -r requirements.txt

      # Optional: Run tests here (e.g., Django tests or PyTest)
      # - name: Run tests
      #   run: |
      #     cd backend
      #     python manage.py test

      # Collect static files for deployment
      - name: Collect static files
        run: |
          cd backend
          python manage.py collectstatic --noinput

      # Optional: Add any other build steps you might need, like building a frontend or other assets.

      # Zip artifact for deployment
      - name: Zip artifact for deployment
        run: |
          cd backend
          zip -r release.zip ./*

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            backend/release.zip
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write # This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      # Unzip artifact for deployment
      - name: Unzip artifact for deployment
        run: |
          unzip release.zip -d backend/

      # Azure login using GitHub secrets (make sure to set these in your GitHub repository settings)
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_F6C52CDB35954F2395F29676E7EC1D38 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_0B13F023D8F443AA882FFB5A610E3721 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_06358B22DD5849998AE1C4EB7903D0AE }}

      # Deploy to Azure Web App
      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'api-synapsespace'
          slot-name: 'Production'
          package: './backend'

      # Run migrations after deployment
      - name: Apply database migrations
        run: |
          cd backend
          python manage.py migrate --noinput

      # Restart the app service if necessary
      - name: Restart Azure Web App
        uses: azure/azure-cli-action@v1
        with:
          azcliversion: '2.42.0'
          inlineScript: |
            az webapp restart --name api-synapsespace --resource-group SynapseSpace
